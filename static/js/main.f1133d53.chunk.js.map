{"version":3,"sources":["components/Header/Header.js","store/actions/actionsTypes.js","store/actions/actions.js","utils/errorHandler.js","store/actions/pokemons.js","components/PokemonsList/PokemonsList.js","components/Search/Search.js","components/Pokemons/Pokemons.js","components/Pokemon/Pokemon.js","components/Navigation/Navigation.js","App.js","reportWebVitals.js","store/initialState.js","store/store.js","store/reducers/pokemonsData.js","index.js"],"names":["Header","className","to","POKEMONS_FETCH_DATA_SUCCESS","POKEMON_FETCH_DATA_SUCCESS","POKEMONS_LIST_FETCH_DATA_SUCCESS","LIST_IS_OPEN_SUCCESS","FETCH_IS_START","FETCH_ERROR","pokemonsDataSuccess","pokemons","type","pokemonDataSuccess","pokemon","pokemonsListDataSuccess","pokemonsList","isFetchStart","boolean","isFetchError","error","errorHandler","errorNum","pokemonsFetchData","url","dispatch","fetch","then","res","status","Error","json","finally","catch","err","message","pokemonFetchData","pokemonsListFetchData","listOpen","PokemonsList","state","useSelector","useDispatch","useEffect","listIsOpenBoolean","onClick","results","sort","a","b","name","map","index","match","previous","event","preventDefault","next","Search","useState","searchInput","setInputOne","onSubmit","value","onChange","target","Pokemons","id","toUpperCase","substring","src","alt","Pokemon","params","useParams","height","weight","types","abilities","ability","Navigation","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1133d53.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <Link className=\"header__logo\" to={`/`}></Link>\r\n      <h1 className='header__title'>Pokemons</h1>\r\n    </div>\r\n  )\r\n}\r\n","export const POKEMONS_FETCH_DATA_SUCCESS = \"POKEMONS_FETCH_DATA_SUCCESS\";\r\nexport const POKEMON_FETCH_DATA_SUCCESS = \"POKEMON_FETCH_DATA_SUCCESS\";\r\nexport const POKEMONS_LIST_FETCH_DATA_SUCCESS = \"POKEMONS_LIST_FETCH_DATA_SUCCESS\";\r\nexport const LIST_IS_OPEN_SUCCESS = \"LIST_IS_OPEN_SUCCESS\";\r\nexport const FETCH_IS_START = \"FETCH_IS_START\";\r\nexport const FETCH_ERROR = \"FETCH_ERROR\";\r\n","import {\r\n    POKEMONS_FETCH_DATA_SUCCESS,\r\n    POKEMON_FETCH_DATA_SUCCESS,\r\n    POKEMONS_LIST_FETCH_DATA_SUCCESS,\r\n    LIST_IS_OPEN_SUCCESS,\r\n    FETCH_IS_START,\r\n    FETCH_ERROR\r\n} from './actionsTypes'\r\n\r\nexport function pokemonsDataSuccess(pokemons) {\r\n    return {\r\n        type: POKEMONS_FETCH_DATA_SUCCESS,\r\n        pokemons: pokemons\r\n    };\r\n}\r\n\r\nexport function pokemonDataSuccess(pokemon) {\r\n    return {\r\n        type: POKEMON_FETCH_DATA_SUCCESS,\r\n        pokemon: pokemon\r\n    };\r\n}\r\n\r\nexport function pokemonsListDataSuccess(pokemonsList) {\r\n    return {\r\n        type: POKEMONS_LIST_FETCH_DATA_SUCCESS,\r\n        pokemonsList: pokemonsList\r\n    };\r\n}\r\n\r\nexport function listOpenSuccess() {\r\n    return {\r\n        type: LIST_IS_OPEN_SUCCESS\r\n    };\r\n}\r\n\r\nexport function isFetchStart(boolean) {\r\n    return { \r\n        type: FETCH_IS_START,\r\n        isFetchStart: boolean\r\n    };\r\n}\r\n\r\nexport function isFetchError(error) {\r\n    return { \r\n        type: FETCH_ERROR,\r\n        isFetchError: error\r\n    };\r\n}\r\n","export default function errorHandler(errorNum) {\r\n    switch (errorNum) {\r\n        case '400':\r\n            return `Необходимо ввести название покемона`;\r\n        case '401':\r\n            return `Неверный токен`;\r\n        case '404':\r\n            return `Покемон не найден`;\r\n        case 'Failed to fetch':\r\n            return `Ошибка запроса`;\r\n        default:\r\n            return `Неизвестная ошибка`;\r\n      }\r\n}\r\n","import { \r\n    pokemonsDataSuccess,\r\n    pokemonDataSuccess,\r\n    pokemonsListDataSuccess,\r\n    listOpenSuccess,\r\n    isFetchStart,\r\n    isFetchError\r\n} from './actions'\r\nimport errorHandler from '../../utils/errorHandler'\r\n\r\nexport function pokemonsFetchData(url) { \r\n    return (dispatch) => {\r\n        dispatch(isFetchStart(true))\r\n        dispatch(isFetchError(null))\r\n        dispatch(pokemonsDataSuccess(null))\r\n        dispatch(pokemonDataSuccess(null))\r\n        fetch(url)\r\n            .then(res => {\r\n                dispatch(pokemonsDataSuccess(null))\r\n                if (res.status !== 200) {\r\n                    throw new Error(res.status)\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(pokemons => {\r\n                dispatch(pokemonsDataSuccess(pokemons))\r\n            })\r\n            .finally(pokemons => {\r\n                dispatch(isFetchStart(false))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(isFetchError(errorHandler(err.message)))\r\n            });\r\n    }\r\n}\r\n\r\nexport function pokemonFetchData(url) { \r\n    return (dispatch) => {\r\n        dispatch(isFetchStart(true))\r\n        dispatch(isFetchError(null))\r\n        dispatch(pokemonDataSuccess(null))\r\n        fetch(url)\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    throw new Error(res.status)\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(pokemon => {\r\n                dispatch(pokemonDataSuccess(pokemon))\r\n            })\r\n            .finally(pokemon => {\r\n                dispatch(isFetchStart(false))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(isFetchError(errorHandler(err.message)))\r\n            });\r\n    }\r\n}\r\n\r\nexport function pokemonsListFetchData(url) { \r\n    return (dispatch) => {\r\n        dispatch(isFetchStart(true))\r\n        dispatch(isFetchError(null))\r\n        fetch(url)\r\n            .then(res => {\r\n                dispatch(pokemonsListDataSuccess(null))\r\n                if (res.status !== 200) {\r\n                    throw new Error(res.status)\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(pokemons => {\r\n                dispatch(pokemonsListDataSuccess(pokemons))\r\n            })\r\n            .finally(pokemons => {\r\n                dispatch(isFetchStart(false))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(isFetchError(errorHandler(err.message)))\r\n            });\r\n    }\r\n}\r\n\r\nexport function listOpen() {\r\n    return (dispatch) => {\r\n        dispatch(listOpenSuccess())\r\n    }\r\n}\r\n","import React, {  useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    pokemonsListFetchData, \r\n    listOpen\r\n   } from '../../store/actions/pokemons';\r\nimport './PokemonsList.css';\r\n\r\nexport default function PokemonsList() {\r\n\r\n    const state = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(pokemonsListFetchData('https://pokeapi.co/api/v2/pokemon?limit=50&offset=0'))\r\n    }, [dispatch]);\r\n\r\n    const pokemonsListIsOpen = () => {\r\n        dispatch(listOpen());\r\n    }\r\n\r\n    const getNextPokemonsList = (event) => {\r\n        event.preventDefault();\r\n        dispatch(pokemonsListFetchData(`${state.pokemonsList.next}`)); \r\n    }\r\n      \r\n    const getPreviousPokemonsList = (event) => {\r\n        event.preventDefault();\r\n        dispatch(pokemonsListFetchData(`${state.pokemonsList.previous}`)); \r\n    }\r\n\r\n    return (\r\n        <div className=\"pokemons-list-container\">\r\n            <div className=\"icon-list\">\r\n                <p className=\"icon-list__text\">Список покемонов</p>\r\n                <div className={`icon-list__img_${state.listIsOpenBoolean}`} onClick={pokemonsListIsOpen}></div>\r\n            </div>\r\n            {(state.listIsOpenBoolean && state.pokemonsList) &&\r\n                <div className='pokemons-list'>\r\n                <ul className=\"pokemons-list__container\">\r\n                    {state.pokemonsList.results.sort((a, b) => {\r\n                    if(a.name < b.name) { return -1; }\r\n                    if(a.name > b.name) { return 1; }\r\n                    return 0;\r\n                    }).map((pokemon, index) => {  \r\n                    return <Link className=\"pokemons-list__link\" key={index} to={`/pokemon/${pokemon.url.match(/\\d+(?=\\D*$)/)}`}>\r\n                        <li className=\"pokemons-list__card\" key={index}>\r\n                        <p className='pokemons-list__name'>\r\n                        {pokemon.name}\r\n                        </p>\r\n                        </li>\r\n                    </Link>})\r\n                    }\r\n                </ul>\r\n\r\n                <div className=\"pokemons-list-container__buttons\">\r\n                    {state.pokemonsList.previous && \r\n                    <button className=\"pokemons-list-container__button_previous\" onClick={ getPreviousPokemonsList }>Предыдущие</button>\r\n                    }            \r\n                    {(state.pokemonsList.next) && \r\n                    <button className=\"pokemons-list-container__button_next\" onClick={ getNextPokemonsList }>Следующие</button>\r\n                    }\r\n                </div>\r\n\r\n                </div>         \r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    pokemonFetchData\r\n   } from '../../store/actions/pokemons';\r\nimport './Search.css';\r\n\r\nexport default function Search() {\r\n\r\n    const dispatch = useDispatch();\r\n    const [ searchInput, setInputOne ] = useState('');\r\n\r\n    const getPokemon = (event) => {\r\n        event.preventDefault();\r\n        if (searchInput !== '') {\r\n          dispatch(pokemonFetchData(`https://pokeapi.co/api/v2/pokemon/${searchInput}`));\r\n        }\r\n      }\r\n\r\n    return (\r\n        <form className='search-form' onSubmit={ getPokemon }>\r\n          <label className='search-title'>\r\n            Введите название покемона:\r\n          </label>\r\n          <div className='search-field'>\r\n            <input \r\n            className='search-input' \r\n            type=\"text\" value={searchInput} \r\n            onChange={(event) => setInputOne(event.target.value)}\r\n            />\r\n            <button className=\"search-button\" type=\"submit\">\r\n              <div className=\"search-button__image\"></div>\r\n            </button>\r\n          </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport './Pokemons.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { \r\n  pokemonsFetchData\r\n } from '../../store/actions/pokemons';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonsList from '../PokemonsList/PokemonsList';\r\nimport Search from '../Search/Search';\r\n\r\nexport default function Pokemons() {\r\n\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n\r\n  useEffect(() => {\r\n    dispatch(pokemonsFetchData('https://pokeapi.co/api/v2/pokemon'))\r\n  }, [dispatch]);\r\n\r\n  const getNextPokemons = (event) => {\r\n    event.preventDefault();\r\n    dispatch(pokemonsFetchData(`${state.pokemons.next}`));\r\n  }\r\n\r\n  const getPreviousPokemons = (event) => {\r\n    event.preventDefault();\r\n    dispatch(pokemonsFetchData(`${state.pokemons.previous}`));\r\n  }\r\n\r\n    return (\r\n      <div className='page'>\r\n\r\n        {/*Форма поиска  */}\r\n        <Search />\r\n\r\n        {/* Прелоадер */}\r\n        {(state.isFetchStart) &&\r\n          <div className='preloader'></div>\r\n        }\r\n        \r\n        {/* Блок ошибки */}\r\n        {(state.isFetchError) &&\r\n          <h2 className='error-block'>{state.isFetchError}</h2>\r\n        }  \r\n\r\n        {/* Карточка покемона при поиске */}\r\n        {state.pokemon &&\r\n          <Link className=\"pokemons-list__link\" to={`/pokemon/${state.pokemon.id}`}>\r\n            <div className='pokemon-card pokemon-card_single-search'>\r\n              <p className='pokemon-card__name'>\r\n                {state.pokemon.name[0].toUpperCase() + state.pokemon.name.substring(1)}\r\n              </p>\r\n              <div className=\"pokemon-card__images\">\r\n                <img \r\n                  className=\"pokemon-card__image\"\r\n                  src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${state.pokemon.id}.png`}\r\n                  alt='pokemon'/>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        }\r\n\r\n        {state.pokemons &&\r\n        <div className=\"container\">\r\n\r\n          {/* Выпадающий список покемонов */}\r\n          <PokemonsList />\r\n\r\n            {/* Покемоны на главной странице */}\r\n          <div className=\"pokemons-container\">\r\n            <ul className=\"pokemons-card-container\">\r\n              {state.pokemons.results.map((pokemon, index)=> {\r\n                return <Link className=\"pokemon-card__link\" key={index} to={`/pokemon/${pokemon.url.match(/\\d+(?=\\D*$)/)}`}>\r\n                <li className=\"pokemon-card\" key={index}>\r\n                          <p className='pokemon-card__name'>\r\n                            {pokemon.name[0].toUpperCase() + pokemon.name.substring(1)}\r\n                          </p>\r\n                          <div className=\"pokemon-card__images\">\r\n                            <img \r\n                            className=\"pokemon-card__image\" \r\n                            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.url.match(/\\d+(?=\\D*$)/)}.png`} \r\n                            alt='pokemon'/>\r\n                          </div>\r\n                        </li>\r\n                  </Link>\r\n                })\r\n              }\r\n            </ul>\r\n            <div className=\"pokemons-container__buttons\">\r\n              {state.pokemons.previous && \r\n                <button className=\"pokemons-container__button_previous\" onClick={ getPreviousPokemons }>&lt;</button>\r\n              }           \r\n              {(state.pokemons.next) && \r\n                <button className=\"pokemons-container__button_next\" onClick={ getNextPokemons }>&gt;</button>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div> \r\n        }\r\n\r\n      </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { \r\n  pokemonFetchData\r\n} from '../../store/actions/pokemons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from 'react-router-dom';\r\nimport './Pokemon.css';\r\nimport PokemonsList from '../PokemonsList/PokemonsList';\r\n\r\nexport default function Pokemon() {\r\n  \r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(pokemonFetchData(`https://pokeapi.co/api/v2/pokemon/${params.id}`))\r\n  }, [params, dispatch]);\r\n\r\n    return (\r\n      <div className=\"container-single\">\r\n\r\n        {/* Выпадающий список покемонов */}\r\n        <PokemonsList />\r\n\r\n        {/* Подробная карточка покемона */}\r\n        {state.pokemon &&\r\n          <div className=\"single-card\">\r\n\r\n            <div className=\"single-card__container\">\r\n              <p className=\"single-card__name\">{state.pokemon.name[0].toUpperCase() + state.pokemon.name.substring(1)}</p>\r\n              <img \r\n              className=\"single-card__image\"\r\n              src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${state.pokemon.id}.png`} \r\n              alt=\"pokemon\" />\r\n            </div>\r\n\r\n            <div className=\"single-card__container\">\r\n            <p className=\"single-card__text\">Рост:</p>\r\n            <p className=\"single-card__text-item\">{state.pokemon.height * 10} сантиметров</p>\r\n            <p className=\"single-card__text\">Вес:</p>\r\n            <p className=\"single-card__text-item\">{state.pokemon.weight / 10} килограмм</p>\r\n            \r\n            <p className=\"single-card__text\">Тип:</p>\r\n            <ul className=\"single-card__list\">\r\n              {state.pokemon.types.map((type, index)=> {\r\n                return<li \r\n                  key={index}\r\n                  className=\"single-card__list-item\"\r\n                  >\r\n                    <p className=\"single-card__list-text\">{type.type.name}</p>\r\n                </li>\r\n                })\r\n              }\r\n            </ul>\r\n\r\n            <p className=\"single-card__text\">Способности:</p>\r\n            <ul className=\"single-card__list\">\r\n              {state.pokemon.abilities.map((ability, index)=> {\r\n                return<li \r\n                  key={index}\r\n                  className=\"single-card__list-item\"\r\n                  >\r\n                    <p className=\"single-card__list-text\">{ability.ability.name}</p>\r\n                </li>\r\n                })\r\n              }\r\n            </ul>\r\n            </div>\r\n          </div> \r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <Link className=\"nav-container__link\" to={`/`}>На главную</Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Header from './components/Header/Header'\r\nimport Pokemons from './components/Pokemons/Pokemons'\r\nimport Pokemon from './components/Pokemon/Pokemon'\r\nimport Navigation from './components/Navigation/Navigation'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter basename=\"/pokemons-react-hooks\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Pokemons />\r\n          </Route>\r\n          <Route exact path=\"/pokemon/:id\">\r\n            <Navigation />\r\n            <Pokemon />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    listIsOpenBoolean: true\r\n};\r\n\r\nexport default initialState;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { pokemonsData } from './reducers/pokemonsData';\r\n\r\n\r\nconst store = createStore(\r\n    pokemonsData,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\n// store.subscribe(() => console.info('subscribe', store.getState()))\r\n\r\nexport default store;\r\n","import initialState from '../initialState';\r\nimport { \r\n    POKEMONS_FETCH_DATA_SUCCESS, \r\n    POKEMON_FETCH_DATA_SUCCESS, \r\n    POKEMONS_LIST_FETCH_DATA_SUCCESS,\r\n    LIST_IS_OPEN_SUCCESS,\r\n    FETCH_IS_START,\r\n    FETCH_ERROR\r\n} from '../actions/actionsTypes';\r\n\r\nexport function pokemonsData(state = initialState, action) {\r\n    switch(action.type) {\r\n        case POKEMONS_FETCH_DATA_SUCCESS: \r\n        return {\r\n            ...state,\r\n            pokemons: action.pokemons\r\n        };\r\n        case POKEMON_FETCH_DATA_SUCCESS: \r\n        return {\r\n            ...state,\r\n            pokemon: action.pokemon\r\n        };\r\n        case POKEMONS_LIST_FETCH_DATA_SUCCESS: \r\n        return {\r\n            ...state,\r\n            pokemonsList: action.pokemonsList\r\n        };\r\n        case LIST_IS_OPEN_SUCCESS: \r\n        return {\r\n            ...state,\r\n            listIsOpenBoolean: !state.listIsOpenBoolean\r\n        };\r\n        case FETCH_IS_START: \r\n        return {\r\n            ...state,\r\n            isFetchStart: action.isFetchStart \r\n        };\r\n        case FETCH_ERROR: \r\n        return {\r\n            ...state,\r\n            isFetchError: action.isFetchError\r\n        };\r\n        \r\n        default: return state;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}